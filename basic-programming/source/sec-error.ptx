<?xml version="1.0" encoding="UTF-8"?>

<!--*****************************************
This is part of Basic Programming
Copyright (C) 2024
Phạm Công Vinh
See the file COPYING for copying conditions.
******************************************-->

<section xml:id="sec-error" xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Lỗi</title>

  <objectives>
    <ul>
      <li>Learn about errors and ways to deal with them.</li>
    </ul>
  </objectives>

  <introduction>
    
    <p>
      Congratulations! You have equipped yourself with quite a few programming fundamentals.
    </p>

    <p>
      Before we continue, to improve your learning journey and experience, you should know how to deal with <term>errors</term>.
    </p>

    <note>
      <idx><h>Khái quát</h><h>lỗi</h></idx>
      <p>
        Errors, if any, will be shown in the <term>terminal</term>. Some additional pieces of information about an error are:

        <ul>
          <li>
            <p>
              The line on which the error is spotted
            </p>
          </li>
          <li>
            <p>
              The type of error
            </p>
          </li>
          <li>
            <p>
              A description of the error
            </p>
          </li>
          <li>
            <p>
              <etc></etc>
            </p>
          </li>
        </ul>
        Below are some examples:
      </p>
    </note>

    <sage>
      <input>
        print("Hello world!")
        print("This is a string.")
        print("This is another string.) 
      </input>
    </sage>
    <problem>
      <pre>
        Cell In [1], line 3
          print("This is another string.)
                ^
        SyntaxError: unterminated string literal (detected at line 3)
      </pre>
    </problem>
    <investigation>
      <idx><h>Ví dụ code</h><h>lỗi cú pháp</h></idx>
      <p></p>
      <p>
        An error is spotted in line 3, which is of type <c>SyntaxError</c>.
      </p>
      <p>
        Reading the description and taking another look at line 3, we can easily see that we are missing a quotation mark.
      </p>
    </investigation>

    <p>
      Another example:
    </p>

    <sage language="python">
      <input>
        a = 5
        s = "string"
        print(a + s)
      </input>
    </sage>
    <problem>
      <pre>
        TypeError
        Cell In [1], line 3

        ...

        TypeError: unsupported operand type(s) for +: 'int' and 'str'
      </pre>
    </problem>
    <investigation>
      <idx><h>Ví dụ code</h><h>lỗi kiểu dữ liệu</h></idx>
      <p></p>
      <p>
        An error of type <c>TypeError</c> is spotted at line 3.
      </p>
      <p>
        The description simply means that addition between an integer and a string is unsupported.
      </p>
    </investigation>

    <p>
      The final example uses an external function from the library Numpy that simply calculates the square root.
    </p>

    <sage language="python">
      <input>
        import numpy as np # Use library Numpy
        print(np.sqrt("hello?"))
      </input>
    </sage>
    <problem>
      <pre>
        TypeError
        Cell In [1], line 2

        ...

        TypeError: ufunc 'sqrt' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''
      </pre>
    </problem>
    <investigation>
      <idx><h>Ví dụ code</h><h>lỗi kiểu dữ liệu</h></idx>
      <p></p>
      <p>
        An error of type <c>TypeError</c> is spotted at line 2.
      </p>
      <p>
        The description might be long, but essentially it reads <q>a string cannot be passed into the function sqrt</q>.
      </p>
    </investigation>

    <p>
      But what should you do if you are even more confused after reading the terminal?
    </p>

  </introduction>

  <subsection xml:id="subsec-fix-error">
    <title>Cách Sửa Lỗi</title>

    <p>
      There is no programmer, however skilled, who is able to memorize every potential error. It's totally normal for a senior programmer to look up errors on the Internet, even ones they've fixed before. Of course, the more errors they deal with, the more experience they accumulate.
    </p>

    <p>
      Coming up are some of my personal experiences in fixing errors. You can try them out one after another:

      <ol>
        <li>
          <p>
            <!--  -->
            <term>Fix it</term><mdash />In the case the error is easily understood, you can just fix it. Otherwise, we continue with the next step.
          </p>
        </li>
        <li>
          <p>
            <term>Search it on the Internet</term><mdash />You can look it up by copy-pasting its description onto Google.
          </p>

          <note>
            <idx><h>Chú ý</h><h>tra cứu mạng</h></idx>
            <p>
              You should include the programming language being used as a keyword to increase efficiency, for instance, <q>python unterminated string literal...</q>.
            </p>
          </note>

          <insight>
            <idx><h>Lưu ý</h><h>tài liệu</h></idx>
            <p>
              You can refer to documentation in your language of choice. But it is commonly the case that English resources are the best in terms of availability and being up-to-date.
            </p>
          </insight>

          <p>
            The majority of errors you might run into have already been solved by others. Thus, we can quickly read online posts and discussions and learn their solutions. Some of the most popular forums are <term>Stack Overflow</term>, <term>Github</term>, <term>Stack Exchange</term>, <term>Reddit</term>.
          </p>
          <p>
            Here, if you run into another one, or if you are still unable to fix it, you can repeat the process, or proceed to step 3 respectively.
          </p>
        </li>
        <li>
          <p>
            <term>Describe it yourself</term><mdash />It seems others' solutions don't apply to you when using the provided description. In that case, why don't you try to detail it using your own words? Describe what you are trying to achieve, with which data types, with which language, and maybe your suspicion of why the error occurs, <etc /> Not working? Let's move to the next approach.
          </p>
        </li>
        <li>
          <p>
            <term>Use artificial intelligence (AI)</term><mdash />If possible, you should try taking advantage of coding AIs such as <term>ChatGPT</term> or <term>Github Copilot</term> to fix errors. This is becoming an increasingly popular and effective approach.
          </p>
        </li>
        <li>
          <p>
            <term>Make a post</term><mdash></mdash>When all other means have failed, it's time for you to request help from other human programmers. You can ask people you know or go onto online programming forums and compose a post detailing your problem.
          </p>
          <p>
            <idx><h>Chú ý</h><h>văn hóa mạng</h></idx>
            Make sure to study online <term>etiquette</term> to know how to behave appropriately when using such forums. Because you are looking for others' help, being respectful is vital.
          </p>
        </li>
      </ol>
    </p>
    
  </subsection>

  <conclusion>
    <p>
      <cd>
      </cd>
    </p>

    <exploration>
      <title>Basic Programming <mdash /> Part 11: Errors &amp; How To Fix Them</title>
      <idx><h>Video</h><h>phần 11</h></idx>
    
      <video youtube="iMXToAm9a0c"/>
      
    </exploration>

  </conclusion>
</section>