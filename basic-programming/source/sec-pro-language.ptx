<?xml version="1.0" encoding="UTF-8"?>

<!--*****************************************
This is part of Basic Programming
Copyright (C) 2024
Phạm Công Vinh
See the file COPYING for copying conditions.
******************************************-->

<section xml:id="sec-pro-language" xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Programming Languages</title>

  <objectives>
    <ul>
      <li>See some examples of different programming languages.</li>
      <li>Learn about <term>high-level</term> and <term>low-level</term> languages.</li>
    </ul>
  </objectives>

  <definition xml:id="def-">
    <idx><h>Definitions</h><h>of programming languages</h></idx>
    <statement>
      <p>
        <term>A programming language</term> is a system of notation that helps humans create computer programs.
      </p>

      <p>
        Each programming language has its own set of <term>syntax</term>.
      </p>

      <p>
        <term>Syntax</term> is simply the <q>grammar</q> of a programming language, which is crucial for the computer to understand and execute code.
      </p>
    </statement>
  </definition>

  <p>
    The code cell below is written in <term>Python</term><mdash></mdash>one of the most popular programming languages in recent years. You can run the code and see the results.
  </p>

  <sage language="python">
    <input>
      print("Hello World!")
    </input>
  </sage>
  <problem>
    <pre>
      Hello World!
    </pre>
  </problem>
  
  <investigation>
    <idx><h>Code examples</h><h>high-level</h></idx>
    <idx><h>Functions</h><h>print()</h></idx>
    <p></p>
    <p>
      The command <c>print()</c> simply puts data into the terminal. In this case, it's the words <q>Hello World!</q>.
    </p>
  </investigation>

  <p>
    <idx><h>Code examples</h><h>high-level</h></idx>
    Here is another code block written in Python. (You don't have to understand what the code is doing, though it's easy to guess.)
  </p>

  <aside>
    <title>Try It Out</title>
    
    <p>
      Copy and paste the code into a code cell and run it.   
    </p>
  </aside>

  <program language="python">
    <input>
      a = 0
      while a &lt; 10:
          print(a, end=" ")
          if a % 2 == 0:
              print("is even")
          else:
              print("is odd")
          a += 1
    </input>
  </program>

  <p>
    You can easily see that there are <term>keywords</term> such as <c>while</c>, <c>print</c> <c>end</c>, <c>if</c>, and <c>else</c>. Besides those, Python's syntax includes many keywords and features that closely resemble the English language.
  </p>

  <definition xml:id="def-prolang-high-level">
    <idx><h>Definitions</h><h>of high-level languages</h></idx>
    <statement>
      <p>
        Python is considered a <term>high-level</term> programming language because its <term>syntax</term> closely resembles English.
      </p>
    </statement>
  </definition>

  <p>
    Therefore, Python is usually recommended to beginners, which is also why it is one of the most well-known programming languages.
  </p>

  <p>
    <idx><h>Code examples</h><h>low-level</h></idx>
    The following example is written in <term>Assembly</term>. When compiled it also outputs the words <q>Hello World!</q>. (Again, don't try to understand the code. This one is beyond even me.)
  </p>

  <aside>
    <title>Try It Out</title>
    
    <p>
      Here's an <url href="https://onecompiler.com/assembly" visual="onecompiler.com/assembly">Assembly compiler</url> if you want to see it run.  
    </p>
  </aside>

  <program language="assy">
    <input>
      section .data
        hello: db 'Hello World!',10
        helloLen: equ $-hello

      section .text
        global _start

      _start:
        mov eax,4
        mov ebx,1
        mov ecx,hello
        mov edx,helloLen

        int 80h
        mov eax,1
        mov ebx,0
        int 80h;
    </input>
  </program>

  <p>
    As you can see, this is very close to computer language. And Assembly needs 14 lines of code to do what Python can do with one.
  </p>

  <definition xml:id="def-prolang-low-level">
    <idx><h>Definitions</h><h>of low-level languages</h></idx>
    <statement>
      <p>
        Assembly is considered a <term>low-level</term> programming language since its syntax is closer to machine code.
      </p>
    </statement>
  </definition>

  <p>
    In conclusion, the syntax of high-level languages is easier to understand than that of low-level ones. Maybe you'd ask <q>Then why should we use low-level languages?</q>
  </p>

  <p>
    There're many reasons for that, and among them, speed is the most obvious. Basically, code written in high-level languages has to go through more intermediate steps to be translated into machine code (binary) than low-level ones, thus it's obvious that the latter often have a speed advantage.
  </p>
  <p>
    Some other reasons are specialization, precise data manipulation, legacy systems, <etc />
  </p>
  
  <insight>
    <idx><h>Insights</h><h>high- vs low-level</h></idx>
    <p>
      You can imagine a high-level programming language as a 4-seat family car, which is user-friendly and can be driven by most people. Then, a low-level one would be an F1 racing car that only the most skillful professionals can drive.
    </p>
    <p>
      And in return, the <q>low-level</q> F1 racing car will be significantly faster than the <q>high-level</q> family car.
    </p>
  </insight>

  <p>
    However, for <term>beginner-level</term> usage, this speed advantage doesn't really matter. So, for you, high-level languages are definitely the way to go.
  </p>

  <note>
    <idx><h>Notes</h><h>on code examples</h></idx>
    <p>
      In this article, code examples are written in <term>Python</term>, making it easier for you to follow and experiment.
    </p>
    <p>
      But you can also play with other programming languages in the <xref ref="appendix-playground" text="title"></xref>.
    </p>
  </note>

  <aside>
    <title>Topic(s) you might be interested in:</title>
    <p>
      <ul>
        <li>
          <p>
            <idx><h>Links</h><h>2023 survey on popular languages</h></idx>
            <url href="https://survey.stackoverflow.co/2023/#section-most-popular-technologies-programming-scripting-and-markup-languages" visual="survey.stackoverflow.co/2023/#section-most-popular-technologies-programming-scripting-and-markup-languages">stackoverflow's 2023 survey on the most popular languages</url>
          </p>
        </li>
      </ul>
    </p>
  </aside>

  <p>
    A language's syntax is developed in consideration of its <term>purpose(s)</term>. For instance, Guido van Rossum greatly prioritized readability and ease of use when he created Python. Therefore, its syntax aims to enable developers to write clear and expressive code.
  </p>

  <insight xml:id="insight-choose-pro-language">
    <title>Choosing A Programming Language</title>
    <idx><h>Insights</h><h>choosing a language</h></idx>
    <p>
      When getting started with programming, a beginner often comes across certain topics on the Internet:
      <ul>
        <li>
          <q>Which programming language should I start with?</q>
        </li>
        <li>
          <q>Which programming language should I learn in 2024?</q>
        </li>
        <li>
          <q>Which programming language to learn for high-paying jobs?</q>
        </li>
        <li>
          <etc></etc>
        </li>
      </ul>

      I think these are impractical questions, and I would advise you against that mindset. Instead, you should ask questions such as:

      <ul>
        <li>
          <q>What is my purpose in learning a new programming language?</q>
        </li>
        <li>
          <q>For that purpose, which programming language is suitable?</q>
        </li>
        <li>
          <q>For that purpose and considering my current level, do I want to learn a high-level or low-level language?</q>
        </li>
        <li>
          <etc></etc>
        </li>
      </ul>

      There's an ever-growing number of programming languages, and each of them has its own <em>purposes, pros, and cons</em>.
    </p>
  </insight>

  <figure>
    <caption>Basic Programming <mdash /> Part 3: Programming Languages</caption>
    <idx><h>Videos</h><h>part 03</h></idx>
    
    <video youtube="iMXToAm9a0c" label="sec-pro-language-29-3"/>
      
  </figure>

</section>